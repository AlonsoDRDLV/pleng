programa ::= <tPROGRAMA> <tIDENTIFICADOR> ";"
    declaracion_variables declaracion_acciones
    bloque_sentencias
declaracion_variables ::= ( declaracion ";" )*
declaracion ::= tipo_variables identificadores
tipo_variables ::= <tENTERO> | <tCARACTER> | <tBOOLEANO>
identificadores ::= <tIDENTIFICADOR> ( "," <tIDENTIFICADOR> )*
declaracion_acciones ::= ( declaracion_accion )*
declaracion_accion ::= cabecera_accion ";"
declaracion_variables declaracion_acciones bloque_sentencias
cabecera_accion ::= <tACCION> <tIDENTIFICADOR> parametros_formales
parametros_formales ::= "(" parametros ")" ";"
lista_parametros ::=  <tIDENTIFICADOR> ("," <tIDENTIFICADOR>)* 
parametros ::= clase_parametros tipo_variables lista_parametros | clase_parametros tipo_variables lista_parametros ";" parametros
clase_parametros ::= <tVAL> | <tREF>
bloque_sentencias ::= <tPRINCIPIO> lista_sentencias <tFIN>
lista_sentencias ::= ( sentencia )+
sentencia ::= leer ";"
    | escribir ";"
    | asignacion
    | invocacion_accion
    | seleccion
    | mientras_que
leer ::= <tLEER> "(" lista_asignables ")"
lista_asignables ::= ( <tIDENTIFICADOR> ",")* <tIDENTIFICADOR> ";"
escribir ::= <tESCRIBIR> "(" lista_escribibles ")"
lista_escribibles ::= ( ( <tIDENTIFICADOR> 
                            | <tCONSTCHAR> | <tCONSTCAD> 
                            | <tENTACAR> "(" expresion ")" ) ",")* ( <tIDENTIFICADOR> 
                            | <tCONSTCHAR> | <tCONSTCAD> |  ) ";"
asignacion ::= <tIDENTIFICADOR> <tOPAS> expresion ";"
invocacion_accion ::= <tIDENTIFICADOR> argumentos ";"
mientras_que ::= <tMQ> expresion lista_sentencias <tFMQ>
seleccion ::= <tSI> argumentos <tENT> lista_sentencias ( <tSI_NO> lista_sentencias)? <tFSI>
argumentos ::= "(" ( lista_expresiones )? ")"
lista_expresiones ::= expresion | expresion operador_relacional lista_expresiones
expresion ::= expresion_simple operador_relacional expresion_simple
operador_relacional ::= <tOPAS> | <tNI> | <tMENOR> | <tMAYOR> | <tMEI> | <tMAI>
expresion_simple ::= termino | ("+" | "-") termino | expresion_simple operador_aditivo termino
operador_aditivo ::= "+" | "-" | <tOR>
termino ::= factor operador_multiplicativo factor
operador_multiplicativo ::= "*" | <tDIV> | <tMOD> | <tAND>
factor ::= "-" factor
    | <tNOT> factor
    | "(" expresion ")"
    | <tENTACAR> "(" expresion ")"
    | <tCARAENT> "(" expresion ")"
    | <tIDENTIFICADOR>
    | <tCONSTENTERA>
    | <tCONSTCHAR>
    | <tCONSTCAD>
    | <tTRUE>
    | <tFALSE>