/**
 * Especificaci�n JavaCC para la Pr�ctica 2 (Procesadores de Lenguajes)
 * Javier Fabra - jfabra@unizar.es
 * v1.2 - 2021/03/08
 */
options
{
  static = true;
  ignore_case = true;
}

PARSER_BEGIN(CompiladorClases)

public class CompiladorClases
{
  public static void main(String args []) throws ParseException
  {
    CompiladorClases parser = new CompiladorClases(System.in);
    System.out.println("Leyendo de la entrada est�ndar...");
    try { 
    	CompiladorClases.programa();
    	System.out.println("Analizado correctamente");
    }
    catch (Exception e) {
		System.out.println("NOK.");
        System.out.println(e.getMessage());
        CompiladorClases.ReInit(System.in);
	}
    catch (Error e) { 
        System.out.println("Oops.");
        System.out.println(e.getMessage());
	}
  }
}

PARSER_END(CompiladorClases)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
| <"%" (~["\n", "\r"])*>
| <"%%" .* "%%">
}

TOKEN : /* PALABRAS RESERVADAS */
{
  < tCLASE : "clase" >
  {
    System.out.println("CLASE");
  }
| < tMETODO : "metodo" >
  {
    System.out.println("METODO");
  }
  
}

TOKEN : /* TIPOS DE DATOS */
{
  < tENTERO : "entero" >
  {
    System.out.println("ENTERO");
  }
| < tDECIMAL : "decimal" >
  {
    System.out.println("DECIMAL");
  }
}

TOKEN : /* AGRUPACIONES */
{
  <  tLLAVE_IZQ : "{" >
  {
    System.out.println("LLAVE_IZQ");
  }
| <  tLLAVE_DCHA : "}" >
  {
    System.out.println("LLAVE_DCHA");
  }
}

TOKEN : /* VALORES */
{
  < #DIGITO : ["0"-"9"] >
| < #LETRA : ["a"-"z","_","0"-"9"] >
| < tVALOR_ENTERO : ("-")?(< DIGITO >)+ >
  {
    System.out.println("VALOR_ENTERO (Valor: " + matchedToken + ")");
  }
| <  tVALOR_DECIMAL : ("-")?(< DIGITO >)+"."(< DIGITO >)+ >
  {
    System.out.println("VALOR_DECIMAL (Valor: " + matchedToken + ")");
  }
| <  tIDENTIFICADOR : (< LETRA >)+ >
  {
    System.out.println("IDENTIFICADOR (Valor: " + matchedToken + ")");
  }
}


TOKEN : /* OPERADORES */
{
  <  tASIGNACION : "=" >
  {
    System.out.println("ASIGNACION");
  }
| <  tFIN_SENTENCIA : ";" >
  {
    System.out.println("FIN_SENTENCIA");
  }
}

// ADICION NUESTRA.

TOKEN : /*  */
{
  < tPROGRAMA : "programa" >
  {
    System.out.println("PROGRAMA");
  }
| < tVAR : "var" >
{
  System.out.println("VAR");
}
| < tOR : "or" >
{
  System.out.println("OR");
}
| < tNOT : "not" >
{
  System.out.println("NOT");
}
| < tPRINCIPIO : "principio" >
{
  System.out.println("PRINCIPIO");
}
| < tFIN : "fin" >
{
  System.out.println("FIN");
}
}


TOKEN : /*Control de flujo */
{
  < tSI : "si" >
  {
    System.out.println("SI");
  }
| < tENT : "ent" >
{
  System.out.println("ENTONCES");
}
| < tSI_NO : "si_no" >
{
  System.out.println("SI NO");
}
| < tFSI : "fsi" >
{
  System.out.println("FIN SI");
}
| < tMQ : "mq" >
{
  System.out.println("MIENTRAS QUE");
}
| < tFMQ : "fmq" >
{
  System.out.println("FIN MIENTRAS QUE");
}
| < tSI_NO : "si_no" >
{
  System.out.println("SI NO");
}
}

TOKEN : /* Lectura/Escritura */
{
  < tESCRIBIR : "escribir" >
  {
    System.out.println("ESCRIBIR");
  }
| < tLEER : "leer" >
{
  System.out.println("LEER");
}
}

TOKEN : /* Operador multiplicativo  */
{
  < tAND : "and" >
  {
    System.out.println("AND");
  }
| < tMOD : "mod" >
{
  System.out.println("MOD");
}
| < tDIV : "div" >
{
  System.out.println("DIV");
}
}

TOKEN : /*tipo_variables */
{
  < tENTERO : "entero" >
  {
    System.out.println("ENTERO");
  }
| < tBOOLEANO : "booleano" >
{
  System.out.println("BOOLEANO");
}
| < tCARACTER : "caracter" >
{
  System.out.println("CARACTER");
}
}

TOKEN : /*valor booleano*/
{
  < tTRUE : "true" >
  {
    System.out.println("TRUE");
  }
| < tFALSE : "false" >
{
  System.out.println("FALSE");
} 
}

TOKEN : /* conversion de tipo entero y caracter */
{
  < tENTACAR : "entacar" >
  {
    System.out.println("ENTACAR");
  }
| < tCARAENT : "caraent" >
{
  System.out.println("CARAENT");
}
}

TOKEN: /* accion */
{
  < tACCION : "accion" >
  {
    System.out.println("ACCION");
  }
}

TOKEN : /* clase_parametros */
{
  < tVAL : "val" >
  {
    System.out.println("VAL");
  }
| < tREF : "ref" >
{
  System.out.println("REF");
}
}

TOKEN : /* operador_relacional */
{
  < tMAYOR : ">" >
  {
    System.out.println(">");
  }
| < tMENOR : "<" >
{
  System.out.println("<");
}
| < tIGUAL : "=" >
{
  System.out.println("=");
}
| < tMAI : ">=" >
{
  System.out.println(">=");
}
| < tMEI : "<=" >
{
  System.out.println("<=");
}
| < tNI : "<>" >
{
  System.out.println("<>");
}
| < tOPAS : ":=" >
{
  System.out.println(":=");
}
}

void programa():
{
}
{
  < tCLASE > < tIDENTIFICADOR > < tLLAVE_IZQ > (metodo())+ < tLLAVE_DCHA >
}

void sentencia():
{
}
{
  	< tENTERO > < tIDENTIFICADOR > <tASIGNACION > < tVALOR_ENTERO > < tFIN_SENTENCIA >
 | < tDECIMAL > < tIDENTIFICADOR > <tASIGNACION > < tVALOR_DECIMAL > < tFIN_SENTENCIA >
}

void metodo():
{
}
{
  	< tMETODO > < tIDENTIFICADOR > "{" (sentencia())* "}"
}

